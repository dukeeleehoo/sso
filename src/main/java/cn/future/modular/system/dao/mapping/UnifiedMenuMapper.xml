<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.future.modular.system.dao.UnifiedMenuMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.future.modular.system.model.UnifiedMenu">
        <id column="id" property="id" />
        <result column="code" property="code" />
        <result column="pcode" property="pcode" />
        <result column="pcodes" property="pcodes" />
        <result column="name" property="name" />
        <result column="unqiuecode" property="unqiuecode" />
        <result column="num" property="num" />
        <result column="levels" property="levels" />
        <result column="ismenu" property="ismenu" />
        <result column="tips" property="tips" />
        <result column="appid" property="appid" />
        <result column="status" property="status" />
        <result column="url" property="url" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, code, pcode, pcodes, name, unqiuecode, num, levels, ismenu, tips, appid,status,url
    </sql>





    <select id="selectMenus" resultType="map">
        select
        <include refid="Base_Column_List" />
        from unified_menu
        where status = 1
        <if test="condition != null and condition != ''">
            and (name like CONCAT('%',#{condition},'%') or code like CONCAT('%',#{condition},'%'))
        </if>
        <if test="level != null and level != ''">
            and levels = #{level}
        </if>
        <if test="appid != null and appid != ''">
            and appid = #{appid}
        </if>

    </select>

    <select id="getMenuIdsByRoleId" resultType="long">
        select menuid from
        unified_relation where roleid = #{roleId}
    </select>

    <select id="menuTreeList" resultType="cn.future.core.common.node.ZTreeNode">
        SELECT
        m1.id AS id,
        (
        CASE
        WHEN (m2.id = 0 OR m2.id IS NULL) THEN
        0
        ELSE
        m2.id
        END
        ) AS pId,
        m1. NAME
        AS NAME
        FROM
        unified_menu m1
        LEFT join unified_menu m2 ON m1.pcode = m2. CODE
        where m1.appid=#{appid}
        ORDER BY
        m1.id ASC
    </select>

    <select id="menuTreeListByMenuIds" resultType="cn.future.core.common.node.ZTreeNode">
        SELECT
        m1.id AS id,
        (
        CASE
        WHEN (m2.id = 0 OR m2.id IS NULL) THEN
        0
        ELSE
        m2.id
        END
        ) AS pId,
        m1. NAME AS NAME,
        (
        CASE
        WHEN (m3.ID = 0 OR m3.ID
        IS NULL) THEN
        'false'
        ELSE
        'true'
        END
        ) "checked"
        FROM
        unified_menu m1
        LEFT JOIN
        unified_menu m2
        ON m1.pcode = m2. CODE
        left join (
        SELECT
        ID
        FROM
        unified_menu
        WHERE
        ID IN
        <foreach collection="menuIds" index="index" item="i" open="("
                 separator="," close=")">
            #{i}
        </foreach>
        ) m3 on m1.id = m3.id
        WHERE m1.appid=#{appid}
        ORDER BY
        m1.id ASC
    </select>

    <delete id="deleteRelationByMenu">
        delete from unified_relation where menuid = #{menuId}
    </delete>

    <select id="getResUrlsByRoleId" resultType="string">
        select url from
        unified_relation rel
        inner join unified_menu m on rel.menuid = m.id
        where rel.roleid = #{roleId}
    </select>

    <select id="getMenusByRoleIds" resultType="cn.future.core.common.node.UnifiedMenuNode">
        SELECT
        m1.id AS id,
        m1.unqiuecode AS unqiuecode,
        (
        CASE
        WHEN (m2.id = 0 OR m2.id IS NULL) THEN
        0
        ELSE
        m2.id
        END
        ) AS parentId,
        m1.NAME as name,
        m1.url as url,
        m1.levels as levels,
        m1.ismenu as ismenu,
        m1.num as num
        FROM
        unified_menu m1
        LEFT join unified_menu m2 ON m1.pcode = m2.code
        INNER JOIN (
        SELECT
        ID
        FROM
        unified_menu
        WHERE
        ID IN (
        SELECT
        menuid
        FROM
        unified_relation rela
        WHERE
        rela.roleid IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.roleid}
        </foreach>
        )
        ) m3 ON m1.id = m3.id
        where 1 = 1
        order by levels,num asc
    </select>













</mapper>
